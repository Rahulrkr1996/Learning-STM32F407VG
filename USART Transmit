#include "stm32f4xx.h"
#include "stm32f4xx_rcc.h"
#include "stm32f4xx_usart.h"
#include "stm32f4xx_gpio.h"


unsigned char USART_Receiver(USART_TypeDef *);

void USART_Recieve_Init()
{
	USART_InitTypeDef USART_Init_Obj;

	USART_Init_Obj.USART_BaudRate=9600;
	USART_Init_Obj.USART_WordLength=USART_WordLength_8b;
	USART_Init_Obj.USART_StopBits=USART_StopBits_1;
	USART_Init_Obj.USART_Parity=USART_Parity_No;
	USART_Init_Obj.USART_HardwareFlowControl=USART_HardwareFlowControl_None;
	USART_Init_Obj.USART_Mode=(USART_Mode_Tx|USART_Mode_Rx);

	USART_Init(USART2,&USART_Init_Obj);


	 GPIO_InitTypeDef Obj1;
	 Obj1.GPIO_Pin= GPIO_Pin_2|GPIO_Pin_3;
	 Obj1.GPIO_Mode=GPIO_Mode_IN ;
	 Obj1.GPIO_Speed=GPIO_Speed_50MHz;
	 Obj1.GPIO_OType=GPIO_OType_PP;
	 Obj1.GPIO_PuPd=GPIO_PuPd_NOPULL;

	  GPIO_PinAFConfig(GPIOA,GPIO_PinSource3,GPIO_AF_USART2);
	 GPIO_Init(GPIOA,&Obj1);

}


void USART_Transmit_Init()
{
	USART_InitTypeDef USART_Init_Obj;

	USART_Init_Obj.USART_BaudRate=9600;
	USART_Init_Obj.USART_WordLength=USART_WordLength_8b;
	USART_Init_Obj.USART_StopBits=USART_StopBits_1;
	USART_Init_Obj.USART_Parity=USART_Parity_No;
	USART_Init_Obj.USART_HardwareFlowControl=USART_HardwareFlowControl_None;
	USART_Init_Obj.USART_Mode=(USART_Mode_Tx|USART_Mode_Rx);

	USART_Init(USART2,&USART_Init_Obj);

	 GPIO_InitTypeDef Obj1;
	 Obj1.GPIO_Pin= GPIO_Pin_2|GPIO_Pin_3;
	 Obj1.GPIO_Mode=GPIO_Mode_AF ;
	 Obj1.GPIO_Speed=GPIO_Speed_50MHz;
	 Obj1.GPIO_OType=GPIO_OType_PP;
	 Obj1.GPIO_PuPd=GPIO_PuPd_UP;

	 GPIO_PinAFConfig(GPIOA,GPIO_PinSource2,GPIO_AF_USART2);
	 GPIO_Init(GPIOA,&Obj1);

}

unsigned char USART_Receiver(USART_TypeDef *USARTx)
{
    while ((USARTx->SR & USART_SR_RXNE) == 0)
    {
    }

    return (unsigned char)USART_ReceiveData(USARTx);
}

void USART_Transmiter(USART_TypeDef *USARTx,unsigned char Data)
{
    while ((USARTx->SR & USART_SR_TXE) == 0);

    USART_SendData(USARTx,Data);

}

void Delay(long x)
{
	while(x>0)
		x--;
}


void usart_init(void)
{
  /* USARTx configured as follow:
        - BaudRate = 115200 baud
        - Word Length = 8 Bits
        - One Stop Bit
        - No parity
        - Hardware flow control disabled (RTS and CTS signals)
        - Receive and transmit enabled
  */
  GPIO_InitTypeDef GPIO_InitStructure;
  USART_InitTypeDef USART_InitStructure;

  /* Enable GPIO clock */
  RCC_AHB1PeriphClockCmd(RCC_AHB1Periph_GPIOC, ENABLE);

  /* Enable UART clock */
  RCC_APB1PeriphClockCmd(RCC_APB1Periph_USART3, ENABLE);

  /* Connect PXx to USARTx_Tx*/
  GPIO_PinAFConfig(GPIOC, GPIO_PinSource10, GPIO_AF_USART3);

  /* Connect PXx to USARTx_Rx*/
  GPIO_PinAFConfig(GPIOC, GPIO_PinSource11, GPIO_AF_USART3);

  /* Configure USART Tx as alternate function  */
  GPIO_InitStructure.GPIO_OType = GPIO_OType_PP;
  GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_UP;
  GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF;

  GPIO_InitStructure.GPIO_Pin = GPIO_Pin_10;
  GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
  GPIO_Init(GPIOC, &GPIO_InitStructure);

  /* Configure USART Rx as alternate function  */
  GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF;
  GPIO_InitStructure.GPIO_Pin = GPIO_Pin_11;
  GPIO_Init(GPIOC, &GPIO_InitStructure);

  USART_InitStructure.USART_BaudRate = 9600;
  USART_InitStructure.USART_WordLength = USART_WordLength_8b;
  USART_InitStructure.USART_StopBits = USART_StopBits_1;
  USART_InitStructure.USART_Parity = USART_Parity_No;
  USART_InitStructure.USART_HardwareFlowControl = USART_HardwareFlowControl_None;
  USART_InitStructure.USART_Mode = USART_Mode_Rx | USART_Mode_Tx;

  /* USART configuration */
  USART_Init(USART3, &USART_InitStructure);

  /* Enable USART */
  USART_Cmd(USART3, ENABLE);

}



int main(void)
{
RCC_AHB1PeriphClockCmd(RCC_AHB1Periph_GPIOD,ENABLE);
//RCC_APB1PeriphClockCmd(RCC_APB1Periph_USART2,ENABLE);
char choice='y';
usart_init();

  while(1)
  { if(choice=='y')
    { //USART_Transmit_Init();
      USART_Transmiter(USART3,'y');

      choice='n';

      choice= USART_Receiver(USART3);
    }

    if(choice=='y')
    {  GPIO_InitTypeDef Obj1;
	   Obj1.GPIO_Pin= (GPIO_Pin_12);
	   Obj1.GPIO_Mode=GPIO_Mode_OUT ;
	   Obj1.GPIO_Speed=GPIO_Speed_100MHz;
	   Obj1.GPIO_OType=GPIO_OType_PP;
	   Obj1.GPIO_PuPd=GPIO_PuPd_NOPULL;

	   GPIO_Init(GPIOD,&Obj1);

	   GPIO_ToggleBits(GPIOD,GPIO_Pin_12 );
	   Delay(120000);
    }
  }
  }
